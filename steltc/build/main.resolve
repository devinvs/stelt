types:
  main/list:
  - Public
  - - main/list
    - - a
    - - name: main/list.Nil
        args: Unit
      - name: main/list.Cons
        args: !Tuple
        - !Ident a
        - !Generic
          - - !Ident a
          - !Ident main/list
  main/map:
  - Public
  - - main/map
    - - a
      - b
    - - name: main/map.Map
        args: !Generic
        - - !Tuple
            - !Ident a
            - !Ident b
        - !Ident main/list
  main/char:
  - Public
  - - main/char
    - []
    - - name: main/char.Char
        args: U32
  main/maybe:
  - Public
  - - main/maybe
    - - a
    - - name: main/maybe.None
        args: Unit
      - name: main/maybe.Some
        args: !Ident a
external: []
typedecls:
  main/neg$.3:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/neg
          - !Arrow
            - I64
            - I64
      - !Arrow
        - I64
        - I64
  main/main:
  - Private
  - - []
    - !Arrow
      - Unit
      - U32
  main/add$.8:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/add
          - !Arrow
            - !Tuple
              - U32
              - U32
            - U32
      - !Arrow
        - !Tuple
          - U32
          - U32
        - U32
  main/neg$.0:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/neg
          - !Arrow
            - I8
            - I8
      - !Arrow
        - I8
        - I8
  main/div$.34:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/div
          - !Arrow
            - !Tuple
              - U64
              - U64
            - U64
      - !Arrow
        - !Tuple
          - U64
          - U64
        - U64
  main/sum:
  - Private
  - - []
    - !Arrow
      - !Generic
        - - U32
        - !Ident main/list
      - U32
  main/mod$.39:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mod
          - !Arrow
            - !Tuple
              - I16
              - I16
            - I16
      - !Arrow
        - !Tuple
          - I16
          - I16
        - I16
  main/mul$.22:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mul
          - !Arrow
            - !Tuple
              - U16
              - U16
            - U16
      - !Arrow
        - !Tuple
          - U16
          - U16
        - U16
  main/eq$.47:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/eq
          - !Arrow
            - !Tuple
              - I16
              - I16
            - Bool
      - !Arrow
        - !Tuple
          - I16
          - I16
        - Bool
  main/geq$.57:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/geq
          - !Arrow
            - !Tuple
              - U32
              - U32
            - Bool
      - !Arrow
        - !Tuple
          - U32
          - U32
        - Bool
  main/leq$.61:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/leq
          - !Arrow
            - !Tuple
              - U8
              - U8
            - Bool
      - !Arrow
        - !Tuple
          - U8
          - U8
        - Bool
  main/div$.30:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/div
          - !Arrow
            - !Tuple
              - U16
              - U16
            - U16
      - !Arrow
        - !Tuple
          - U16
          - U16
        - U16
  main/add$.6:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/add
          - !Arrow
            - !Tuple
              - U16
              - U16
            - U16
      - !Arrow
        - !Tuple
          - U16
          - U16
        - U16
  main/sub$.17:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/sub
          - !Arrow
            - !Tuple
              - I32
              - I32
            - I32
      - !Arrow
        - !Tuple
          - I32
          - I32
        - I32
  main/mul$.26:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mul
          - !Arrow
            - !Tuple
              - U64
              - U64
            - U64
      - !Arrow
        - !Tuple
          - U64
          - U64
        - U64
  main/mod$.41:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mod
          - !Arrow
            - !Tuple
              - I32
              - I32
            - I32
      - !Arrow
        - !Tuple
          - I32
          - I32
        - I32
  main/mul$.27:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mul
          - !Arrow
            - !Tuple
              - I64
              - I64
            - I64
      - !Arrow
        - !Tuple
          - I64
          - I64
        - I64
  main/add$.5:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/add
          - !Arrow
            - !Tuple
              - I8
              - I8
            - I8
      - !Arrow
        - !Tuple
          - I8
          - I8
        - I8
  main/geq$.56:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/geq
          - !Arrow
            - !Tuple
              - I32
              - I32
            - Bool
      - !Arrow
        - !Tuple
          - I32
          - I32
        - Bool
  main/div$.31:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/div
          - !Arrow
            - !Tuple
              - I16
              - I16
            - I16
      - !Arrow
        - !Tuple
          - I16
          - I16
        - I16
  main/geq$.59:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/geq
          - !Arrow
            - !Tuple
              - U64
              - U64
            - Bool
      - !Arrow
        - !Tuple
          - U64
          - U64
        - Bool
  main/leq$.66:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/leq
          - !Arrow
            - !Tuple
              - I64
              - I64
            - Bool
      - !Arrow
        - !Tuple
          - I64
          - I64
        - Bool
  main/mod$.37:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mod
          - !Arrow
            - !Tuple
              - I8
              - I8
            - I8
      - !Arrow
        - !Tuple
          - I8
          - I8
        - I8
  main/mul$.21:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mul
          - !Arrow
            - !Tuple
              - I8
              - I8
            - I8
      - !Arrow
        - !Tuple
          - I8
          - I8
        - I8
  main/div$.35:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/div
          - !Arrow
            - !Tuple
              - I64
              - I64
            - I64
      - !Arrow
        - !Tuple
          - I64
          - I64
        - I64
  main/mul$.20:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mul
          - !Arrow
            - !Tuple
              - U8
              - U8
            - U8
      - !Arrow
        - !Tuple
          - U8
          - U8
        - U8
  main/leq$.65:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/leq
          - !Arrow
            - !Tuple
              - U32
              - U32
            - Bool
      - !Arrow
        - !Tuple
          - U32
          - U32
        - Bool
  main/square:
  - Private
  - - []
    - !Arrow
      - U32
      - U32
  main/geq$.58:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/geq
          - !Arrow
            - !Tuple
              - I64
              - I64
            - Bool
      - !Arrow
        - !Tuple
          - I64
          - I64
        - Bool
  main/sub$.12:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/sub
          - !Arrow
            - !Tuple
              - U8
              - U8
            - U8
      - !Arrow
        - !Tuple
          - U8
          - U8
        - U8
  main/add$.10:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/add
          - !Arrow
            - !Tuple
              - U64
              - U64
            - U64
      - !Arrow
        - !Tuple
          - U64
          - U64
        - U64
  main/add$.7:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/add
          - !Arrow
            - !Tuple
              - I16
              - I16
            - I16
      - !Arrow
        - !Tuple
          - I16
          - I16
        - I16
  main/sub$.14:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/sub
          - !Arrow
            - !Tuple
              - U16
              - U16
            - U16
      - !Arrow
        - !Tuple
          - U16
          - U16
        - U16
  main/eq$.45:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/eq
          - !Arrow
            - !Tuple
              - I8
              - I8
            - Bool
      - !Arrow
        - !Tuple
          - I8
          - I8
        - Bool
  main/mul$.24:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mul
          - !Arrow
            - !Tuple
              - U32
              - U32
            - U32
      - !Arrow
        - !Tuple
          - U32
          - U32
        - U32
  main/neg$.2:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/neg
          - !Arrow
            - I32
            - I32
      - !Arrow
        - I32
        - I32
  main/mod$.43:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mod
          - !Arrow
            - !Tuple
              - I64
              - I64
            - I64
      - !Arrow
        - !Tuple
          - I64
          - I64
        - I64
  main/div$.28:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/div
          - !Arrow
            - !Tuple
              - U8
              - U8
            - U8
      - !Arrow
        - !Tuple
          - U8
          - U8
        - U8
  main/mul$.25:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mul
          - !Arrow
            - !Tuple
              - I32
              - I32
            - I32
      - !Arrow
        - !Tuple
          - I32
          - I32
        - I32
  main/sub$.18:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/sub
          - !Arrow
            - !Tuple
              - U64
              - U64
            - U64
      - !Arrow
        - !Tuple
          - U64
          - U64
        - U64
  main/mod$.40:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mod
          - !Arrow
            - !Tuple
              - U32
              - U32
            - U32
      - !Arrow
        - !Tuple
          - U32
          - U32
        - U32
  main/eq$.46:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/eq
          - !Arrow
            - !Tuple
              - U16
              - U16
            - Bool
      - !Arrow
        - !Tuple
          - U16
          - U16
        - Bool
  main/sub$.19:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/sub
          - !Arrow
            - !Tuple
              - I64
              - I64
            - I64
      - !Arrow
        - !Tuple
          - I64
          - I64
        - I64
  main/geq$.54:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/geq
          - !Arrow
            - !Tuple
              - I16
              - I16
            - Bool
      - !Arrow
        - !Tuple
          - I16
          - I16
        - Bool
  main/eq$.44:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/eq
          - !Arrow
            - !Tuple
              - U8
              - U8
            - Bool
      - !Arrow
        - !Tuple
          - U8
          - U8
        - Bool
  main/leq$.64:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/leq
          - !Arrow
            - !Tuple
              - I32
              - I32
            - Bool
      - !Arrow
        - !Tuple
          - I32
          - I32
        - Bool
  main/leq$.60:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/leq
          - !Arrow
            - !Tuple
              - I8
              - I8
            - Bool
      - !Arrow
        - !Tuple
          - I8
          - I8
        - Bool
  main/geq$.52:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/geq
          - !Arrow
            - !Tuple
              - I8
              - I8
            - Bool
      - !Arrow
        - !Tuple
          - I8
          - I8
        - Bool
  main/eq$.51:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/eq
          - !Arrow
            - !Tuple
              - I64
              - I64
            - Bool
      - !Arrow
        - !Tuple
          - I64
          - I64
        - Bool
  main/eq$.49:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/eq
          - !Arrow
            - !Tuple
              - I32
              - I32
            - Bool
      - !Arrow
        - !Tuple
          - I32
          - I32
        - Bool
  main/geq$.55:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/geq
          - !Arrow
            - !Tuple
              - U16
              - U16
            - Bool
      - !Arrow
        - !Tuple
          - U16
          - U16
        - Bool
  main/geq$.53:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/geq
          - !Arrow
            - !Tuple
              - U8
              - U8
            - Bool
      - !Arrow
        - !Tuple
          - U8
          - U8
        - Bool
  main/leq$.62:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/leq
          - !Arrow
            - !Tuple
              - I16
              - I16
            - Bool
      - !Arrow
        - !Tuple
          - I16
          - I16
        - Bool
  main/sub$.16:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/sub
          - !Arrow
            - !Tuple
              - U32
              - U32
            - U32
      - !Arrow
        - !Tuple
          - U32
          - U32
        - U32
  main/mod$.42:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mod
          - !Arrow
            - !Tuple
              - U64
              - U64
            - U64
      - !Arrow
        - !Tuple
          - U64
          - U64
        - U64
  main/leq$.67:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/leq
          - !Arrow
            - !Tuple
              - U64
              - U64
            - Bool
      - !Arrow
        - !Tuple
          - U64
          - U64
        - Bool
  main/div$.32:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/div
          - !Arrow
            - !Tuple
              - U32
              - U32
            - U32
      - !Arrow
        - !Tuple
          - U32
          - U32
        - U32
  main/add$.9:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/add
          - !Arrow
            - !Tuple
              - I32
              - I32
            - I32
      - !Arrow
        - !Tuple
          - I32
          - I32
        - I32
  main/div$.33:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/div
          - !Arrow
            - !Tuple
              - I32
              - I32
            - I32
      - !Arrow
        - !Tuple
          - I32
          - I32
        - I32
  main/eq$.48:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/eq
          - !Arrow
            - !Tuple
              - U32
              - U32
            - Bool
      - !Arrow
        - !Tuple
          - U32
          - U32
        - Bool
  main/neg$.1:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/neg
          - !Arrow
            - I16
            - I16
      - !Arrow
        - I16
        - I16
  main/leq$.63:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/leq
          - !Arrow
            - !Tuple
              - U16
              - U16
            - Bool
      - !Arrow
        - !Tuple
          - U16
          - U16
        - Bool
  main/add$.4:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/add
          - !Arrow
            - !Tuple
              - U8
              - U8
            - U8
      - !Arrow
        - !Tuple
          - U8
          - U8
        - U8
  main/sub$.13:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/sub
          - !Arrow
            - !Tuple
              - I8
              - I8
            - I8
      - !Arrow
        - !Tuple
          - I8
          - I8
        - I8
  main/sub$.15:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/sub
          - !Arrow
            - !Tuple
              - I16
              - I16
            - I16
      - !Arrow
        - !Tuple
          - I16
          - I16
        - I16
  main/add$.11:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/add
          - !Arrow
            - !Tuple
              - I64
              - I64
            - I64
      - !Arrow
        - !Tuple
          - I64
          - I64
        - I64
  main/div$.29:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/div
          - !Arrow
            - !Tuple
              - I8
              - I8
            - I8
      - !Arrow
        - !Tuple
          - I8
          - I8
        - I8
  main/mul$.23:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mul
          - !Arrow
            - !Tuple
              - I16
              - I16
            - I16
      - !Arrow
        - !Tuple
          - I16
          - I16
        - I16
  main/mod$.36:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mod
          - !Arrow
            - !Tuple
              - U8
              - U8
            - U8
      - !Arrow
        - !Tuple
          - U8
          - U8
        - U8
  main/mod$.38:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/mod
          - !Arrow
            - !Tuple
              - U16
              - U16
            - U16
      - !Arrow
        - !Tuple
          - U16
          - U16
        - U16
  main/eq$.50:
  - Public
  - - []
    - !ForAll
      - []
      - - - main/eq
          - !Arrow
            - !Tuple
              - U64
              - U64
            - Bool
      - !Arrow
        - !Tuple
          - U64
          - U64
        - Bool
  main/map:
  - Private
  - - []
    - !Arrow
      - !Tuple
        - !Generic
          - - !GenVar a
          - !Ident main/list
        - !Arrow
          - !GenVar a
          - !GenVar b
      - !Generic
        - - !GenVar b
        - !Ident main/list
typefuns:
  main/add:
  - Public
  - name: main/add
    vars:
    - a
    ty: !Arrow
    - !Tuple
      - !Ident a
      - !Ident a
    - !Ident a
  main/geq:
  - Public
  - name: main/geq
    vars:
    - a
    ty: !Arrow
    - !Tuple
      - !Ident a
      - !Ident a
    - Bool
  main/mod:
  - Public
  - name: main/mod
    vars:
    - a
    ty: !Arrow
    - !Tuple
      - !Ident a
      - !Ident a
    - !Ident a
  main/eq:
  - Public
  - name: main/eq
    vars:
    - a
    ty: !Arrow
    - !Tuple
      - !Ident a
      - !Ident a
    - Bool
  main/div:
  - Public
  - name: main/div
    vars:
    - a
    ty: !Arrow
    - !Tuple
      - !Ident a
      - !Ident a
    - !Ident a
  main/mul:
  - Public
  - name: main/mul
    vars:
    - a
    ty: !Arrow
    - !Tuple
      - !Ident a
      - !Ident a
    - !Ident a
  main/neg:
  - Public
  - name: main/neg
    vars:
    - a
    ty: !Arrow
    - !Ident a
    - !Ident a
  main/leq:
  - Public
  - name: main/leq
    vars:
    - a
    ty: !Arrow
    - !Tuple
      - !Ident a
      - !Ident a
    - Bool
  main/sub:
  - Public
  - name: main/sub
    vars:
    - a
    ty: !Arrow
    - !Tuple
      - !Ident a
      - !Ident a
    - !Ident a
impls:
- fn_name: main/neg$.0
  gen_args: []
  args:
  - - []
    - I8
  body:
  - name: main/neg
    args: !Var
    - a
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i8 %arg.0, -1'
- fn_name: main/neg$.1
  gen_args: []
  args:
  - - []
    - I16
  body:
  - name: main/neg
    args: !Var
    - a
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i16 %arg.0, -1'
- fn_name: main/neg$.2
  gen_args: []
  args:
  - - []
    - I32
  body:
  - name: main/neg
    args: !Var
    - a
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i32 %arg.0, -1'
- fn_name: main/neg$.3
  gen_args: []
  args:
  - - []
    - I64
  body:
  - name: main/neg
    args: !Var
    - a
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i64 %arg.0, -1'
- fn_name: main/add$.4
  gen_args: []
  args:
  - - []
    - U8
  body:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i8 %a, %b'
- fn_name: main/add$.5
  gen_args: []
  args:
  - - []
    - I8
  body:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i8 %a, %b'
- fn_name: main/add$.6
  gen_args: []
  args:
  - - []
    - U16
  body:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i16 %a, %b'
- fn_name: main/add$.7
  gen_args: []
  args:
  - - []
    - I16
  body:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i16 %a, %b'
- fn_name: main/add$.8
  gen_args: []
  args:
  - - []
    - U32
  body:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i32 %a, %b'
- fn_name: main/add$.9
  gen_args: []
  args:
  - - []
    - I32
  body:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i32 %a, %b'
- fn_name: main/add$.10
  gen_args: []
  args:
  - - []
    - U64
  body:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i64 %a, %b'
- fn_name: main/add$.11
  gen_args: []
  args:
  - - []
    - I64
  body:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i64 %a, %b'
- fn_name: main/sub$.12
  gen_args: []
  args:
  - - []
    - U8
  body:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i8 %a, %b'
- fn_name: main/sub$.13
  gen_args: []
  args:
  - - []
    - I8
  body:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i8 %a, %b'
- fn_name: main/sub$.14
  gen_args: []
  args:
  - - []
    - U16
  body:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i16 %a, %b'
- fn_name: main/sub$.15
  gen_args: []
  args:
  - - []
    - I16
  body:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i16 %a, %b'
- fn_name: main/sub$.16
  gen_args: []
  args:
  - - []
    - U32
  body:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i32 %a, %b'
- fn_name: main/sub$.17
  gen_args: []
  args:
  - - []
    - I32
  body:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i32 %a, %b'
- fn_name: main/sub$.18
  gen_args: []
  args:
  - - []
    - U64
  body:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i64 %a, %b'
- fn_name: main/sub$.19
  gen_args: []
  args:
  - - []
    - I64
  body:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i64 %a, %b'
- fn_name: main/mul$.20
  gen_args: []
  args:
  - - []
    - U8
  body:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i8 %a, %b'
- fn_name: main/mul$.21
  gen_args: []
  args:
  - - []
    - I8
  body:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i8 %a, %b'
- fn_name: main/mul$.22
  gen_args: []
  args:
  - - []
    - U16
  body:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i16 %a, %b'
- fn_name: main/mul$.23
  gen_args: []
  args:
  - - []
    - I16
  body:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i16 %a, %b'
- fn_name: main/mul$.24
  gen_args: []
  args:
  - - []
    - U32
  body:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i32 %a, %b'
- fn_name: main/mul$.25
  gen_args: []
  args:
  - - []
    - I32
  body:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i32 %a, %b'
- fn_name: main/mul$.26
  gen_args: []
  args:
  - - []
    - U64
  body:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i64 %a, %b'
- fn_name: main/mul$.27
  gen_args: []
  args:
  - - []
    - I64
  body:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i64 %a, %b'
- fn_name: main/div$.28
  gen_args: []
  args:
  - - []
    - U8
  body:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i8 %a, %b'
- fn_name: main/div$.29
  gen_args: []
  args:
  - - []
    - I8
  body:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i8 %a, %b'
- fn_name: main/div$.30
  gen_args: []
  args:
  - - []
    - U16
  body:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i16 %a, %b'
- fn_name: main/div$.31
  gen_args: []
  args:
  - - []
    - I16
  body:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i16 %a, %b'
- fn_name: main/div$.32
  gen_args: []
  args:
  - - []
    - U32
  body:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i32 %a, %b'
- fn_name: main/div$.33
  gen_args: []
  args:
  - - []
    - I32
  body:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i32 %a, %b'
- fn_name: main/div$.34
  gen_args: []
  args:
  - - []
    - U64
  body:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i64 %a, %b'
- fn_name: main/div$.35
  gen_args: []
  args:
  - - []
    - I64
  body:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i64 %a, %b'
- fn_name: main/mod$.36
  gen_args: []
  args:
  - - []
    - U8
  body:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i8 %a, %b'
- fn_name: main/mod$.37
  gen_args: []
  args:
  - - []
    - I8
  body:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i8 %a, %b'
- fn_name: main/mod$.38
  gen_args: []
  args:
  - - []
    - U16
  body:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i16 %a, %b'
- fn_name: main/mod$.39
  gen_args: []
  args:
  - - []
    - I16
  body:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i16 %a, %b'
- fn_name: main/mod$.40
  gen_args: []
  args:
  - - []
    - U32
  body:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i32 %a, %b'
- fn_name: main/mod$.41
  gen_args: []
  args:
  - - []
    - I32
  body:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i32 %a, %b'
- fn_name: main/mod$.42
  gen_args: []
  args:
  - - []
    - U64
  body:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i64 %a, %b'
- fn_name: main/mod$.43
  gen_args: []
  args:
  - - []
    - I64
  body:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i64 %a, %b'
- fn_name: main/eq$.44
  gen_args: []
  args:
  - - []
    - U8
  body:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i8 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/eq$.45
  gen_args: []
  args:
  - - []
    - I8
  body:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i8 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/eq$.46
  gen_args: []
  args:
  - - []
    - U16
  body:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i16 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/eq$.47
  gen_args: []
  args:
  - - []
    - I16
  body:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i16 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/eq$.48
  gen_args: []
  args:
  - - []
    - U32
  body:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i32 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/eq$.49
  gen_args: []
  args:
  - - []
    - I32
  body:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i32 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/eq$.50
  gen_args: []
  args:
  - - []
    - U64
  body:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i64 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/eq$.51
  gen_args: []
  args:
  - - []
    - I64
  body:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i64 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/geq$.52
  gen_args: []
  args:
  - - []
    - I8
  body:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sge i8 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/geq$.53
  gen_args: []
  args:
  - - []
    - U8
  body:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp uge i8 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/geq$.54
  gen_args: []
  args:
  - - []
    - I16
  body:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sge i16 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/geq$.55
  gen_args: []
  args:
  - - []
    - U16
  body:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp uge i16 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/geq$.56
  gen_args: []
  args:
  - - []
    - I32
  body:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sge i32 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/geq$.57
  gen_args: []
  args:
  - - []
    - U32
  body:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp uge i32 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/geq$.58
  gen_args: []
  args:
  - - []
    - I64
  body:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sge i64 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/geq$.59
  gen_args: []
  args:
  - - []
    - U64
  body:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp uge i64 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/leq$.60
  gen_args: []
  args:
  - - []
    - I8
  body:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sle i8 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/leq$.61
  gen_args: []
  args:
  - - []
    - U8
  body:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp ule i8 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/leq$.62
  gen_args: []
  args:
  - - []
    - I16
  body:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sle i16 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/leq$.63
  gen_args: []
  args:
  - - []
    - U16
  body:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp ule i16 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/leq$.64
  gen_args: []
  args:
  - - []
    - I32
  body:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sle i32 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/leq$.65
  gen_args: []
  args:
  - - []
    - U32
  body:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp ule i32 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/leq$.66
  gen_args: []
  args:
  - - []
    - I64
  body:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sle i64 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
- fn_name: main/leq$.67
  gen_args: []
  args:
  - - []
    - U64
  body:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp ule i64 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
funcs:
  main/mod$.37:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i8 %a, %b'
  main/eq$.50:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i64 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/eq$.48:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i32 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/geq$.52:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sge i8 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/add$.6:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i16 %a, %b'
  main/geq$.56:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sge i32 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/mul$.27:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i64 %a, %b'
  main/geq$.58:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sge i64 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/sub$.15:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i16 %a, %b'
  main/geq$.53:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp uge i8 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/add$.5:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i8 %a, %b'
  main/leq$.61:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp ule i8 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/leq$.64:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sle i32 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/neg$.1:
  - name: main/neg
    args: !Var
    - a
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i16 %arg.0, -1'
  main/square:
  - name: main/square
    args: !Var
    - x
    - null
    body: !Call
    - !Identifier main/add
    - !Tuple
      - !Identifier x
      - !Identifier x
  main/mod$.41:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i32 %a, %b'
  main/mod$.38:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i16 %a, %b'
  main/mul$.22:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i16 %a, %b'
  main/geq$.54:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sge i16 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/sub$.14:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i16 %a, %b'
  main/mod$.39:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i16 %a, %b'
  main/leq$.67:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp ule i64 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/div$.33:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i32 %a, %b'
  main/div$.32:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i32 %a, %b'
  main/mod$.36:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i8 %a, %b'
  main/div$.34:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i64 %a, %b'
  main/leq$.66:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sle i64 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/eq$.49:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i32 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/add$.8:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i32 %a, %b'
  main/mul$.21:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i8 %a, %b'
  main/leq$.63:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp ule i16 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/neg$.0:
  - name: main/neg
    args: !Var
    - a
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i8 %arg.0, -1'
  main/mul$.23:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i16 %a, %b'
  main/sub$.16:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i32 %a, %b'
  main/sub$.18:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i64 %a, %b'
  main/neg$.2:
  - name: main/neg
    args: !Var
    - a
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i32 %arg.0, -1'
  main/sub$.12:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i8 %a, %b'
  main/add$.11:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i64 %a, %b'
  main/eq$.47:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i16 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/add$.7:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i16 %a, %b'
  main/eq$.45:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i8 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/mul$.24:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i32 %a, %b'
  main/leq$.65:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp ule i32 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/sub$.17:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i32 %a, %b'
  main/sum:
  - name: main/sum
    args: !Cons
    - main/list.Nil
    - !Unit Unit
    - null
    body: !Num 0
  - name: main/sum
    args: !Cons
    - main/list.Cons
    - !Tuple
      - - !Var
          - x
          - null
        - !Var
          - xs
          - null
      - null
    - null
    body: !Call
    - !Identifier main/add
    - !Tuple
      - !Identifier x
      - !Call
        - !Identifier main/sum
        - !Identifier xs
  main/div$.28:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i8 %a, %b'
  main/add$.9:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i32 %a, %b'
  main/mul$.25:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i32 %a, %b'
  main/div$.29:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i8 %a, %b'
  main/eq$.46:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i16 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/add$.4:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i8 %a, %b'
  main/div$.31:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i16 %a, %b'
  main/leq$.60:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sle i8 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/geq$.57:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp uge i32 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/sub$.13:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i8 %a, %b'
  main/div$.30:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i16 %a, %b'
  main/mul$.26:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i64 %a, %b'
  main/mod$.40:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i32 %a, %b'
  main/leq$.62:
  - name: main/leq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp sle i16 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/geq$.59:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp uge i64 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/map:
  - name: main/map
    args: !Cons
    - main/list.Nil
    - !Unit Unit
    - null
    body: !Call
    - !Identifier main/list.Nil
    - Unit
  - name: main/map
    args: !Tuple
    - - !Cons
        - main/list.Cons
        - !Tuple
          - - !Var
              - x
              - null
            - !Var
              - xs
              - null
          - null
        - null
      - !Var
        - f
        - null
    - null
    body: !Call
    - !Identifier main/list.Cons
    - !Tuple
      - !Call
        - !Identifier f
        - !Identifier x
      - !Call
        - !Identifier main/map
        - !Tuple
          - !Identifier xs
          - !Identifier f
  main/mod$.43:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i64 %a, %b'
  main/geq$.55:
  - name: main/geq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp uge i16 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/neg$.3:
  - name: main/neg
    args: !Var
    - a
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i64 %arg.0, -1'
  main/mul$.20:
  - name: main/mul
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = mul i8 %a, %b'
  main/main:
  - name: main/main
    args: !Unit Unit
    body: !Call
    - !Identifier main/sum
    - !Call
      - !Identifier main/map
      - !Tuple
        - !Call
          - !Identifier main/list.Cons
          - !Tuple
            - !Num 1
            - !Call
              - !Identifier main/list.Cons
              - !Tuple
                - !Num 2
                - !Call
                  - !Identifier main/list.Cons
                  - !Tuple
                    - !Num 3
                    - !Call
                      - !Identifier main/list.Cons
                      - !Tuple
                        - !Num 4
                        - !Call
                          - !Identifier main/list.Nil
                          - Unit
        - !Identifier main/square
  main/add$.10:
  - name: main/add
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = add i64 %a, %b'
  main/eq$.44:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i8 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
  main/mod$.42:
  - name: main/mod
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = srem i64 %a, %b'
  main/sub$.19:
  - name: main/sub
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sub i64 %a, %b'
  main/div$.35:
  - name: main/div
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String '%out = sdiv i64 %a, %b'
  main/eq$.51:
  - name: main/eq
    args: !Tuple
    - - !Var
        - a
        - null
      - !Var
        - b
        - null
    - null
    body: !Call
    - !Identifier llvm!
    - !Tuple
      - !String '%out'
      - !String "\n\t%cmp = icmp eq i64 %a, %b\n\t%cast = zext i1 %cmp to i8\n\t%out = insertvalue %bool undef, i8 %cast, 0"
defs: {}
type_aliases: {}
aliases: {}
private_impl_map: {}
imports: []
import_idents: []

